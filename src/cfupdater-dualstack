#!/bin/bash

# Forked from benkulbertis/cloudflare-update-record.sh
# CHANGE THESE

# Global API Key (Deprecated + Dangerous)
# Note: Please be caution as the Global API key can have unlimited access to **all** domain and features in your account.
auth_email="john.appleseed@example.org"            # The email used to login 'https://dash.cloudflare.com'
auth_key="f1nd7h47fuck1n6k3y1ncl0udfl4r3c0n50l3"   # Top right corner, "My profile" > "Global API Key"

# API Token (Recommended)
#####                                                                             #####
# WARNING: If you put any value inside the API Token variable,                        #
#            the script will automatically use the token and omit the Global API key, #
#            regardless if the Global API key is defined or not.                      #
#####                                                                             #####
auth_token="xxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Domain and DNS record for synchronization
zone_identifier="f1nd7h3fuck1n6z0n31d3n71f13r4l50" # Can be found in the "Overview" tab of your domain
record_name="dualstack.example.org"                # Which record you want to be synced

# DO NOT CHANGE LINES BELOW

# SCRIPT START
echo -e "Check Initiated"

# Check for current external network IP
ip4=$(curl -s4 https://icanhazip.com/)
ip6=$(curl -s6 https://icanhazip.com/)
if [[ ! -z "${ip4}" && ! -z "${ip6}" ]]; then
  echo -e "  > Fetched current external network IPv4 address: ${ip4}"
  echo -e "  > Fetched current external network IPv6 address: ${ip6}"
else
  >&2 echo -e "Network error, cannot fetch external network IP."
fi

# The execution of update
if [[ ! -z "${auth_token}" ]]; then
  header_auth_paramheader=( -H '"Authorization: Bearer '${auth_token}'"' )
else
  header_auth_paramheader=( -H '"X-Auth-Email: '${auth_email}'"' -H '"X-Auth-Key: '${auth_key}'"' )
fi

# Seek for the record
seek_current_dns_value_cmd=( curl -s -X GET '"https://api.cloudflare.com/client/v4/zones/'${zone_identifier}'/dns_records?name='${record_name}'&type=__type__"' "${header_auth_paramheader[@]}" -H '"Content-Type: application/json"' )
record4=`eval ${seek_current_dns_value_cmd[@]//__type__/A}`
record6=`eval ${seek_current_dns_value_cmd[@]//__type__/AAAA}`

# Can't do anything without the record
if [[ -z "${record4}" || -z "${record6}" ]]; then
  >&2 echo -e "Network error, cannot fetch DNS record."
  exit 1
elif [[ "${record4}" == *'"count":0'* || "${record6}" == *'"count":0'* ]]; then
  >&2 echo -e "Record does not exist, perhaps create one first?"
  exit 1
fi

# Set the record identifier from result
record_identifier4=`echo "${record4}" | sed 's/.*"id":"//;s/".*//'`
record_identifier6=`echo "${record6}" | sed 's/.*"id":"//;s/".*//'`

# Set existing IP address from the fetched record
old_ip4=`echo "${record4}" | sed 's/.*"content":"//;s/".*//'`
old_ip6=`echo "${record6}" | sed 's/.*"content":"//;s/".*//'`
echo -e "  > Fetched current IPv4 address DNS record value: ${old_ip4}"
echo -e "  > Fetched current IPv6 address DNS record value: ${old_ip6}"

# Compare if they're the same
echo -e "Update for A record '${record_name} (${record_identifier4})' started."
if [ "${ip4}" == "${old_ip4}" ]; then
  echo -e "  > IPv4 has not changed. Aborting..."
else
  echo -e "  > Different IPv4 addresses detected, synchronizing..."
fi

echo -e "Update for AAAA record '${record_name} (${record_identifier6})' started."
if [ "${ip6}" == "${old_ip6}" ]; then
  echo -e "  > IPv6 has not changed. Aborting..."
else
  echo -e "  > Different IPv6 addresses detected, synchronizing..."
fi

if [ "${ip4}" == "${old_ip4}" ] && [ "${ip6}" == "${old_ip6}" ]; then
  exit 0
fi

# The secret sause for executing the update
json_data_v4="'"'{"id":"'${zone_identifier}'","type":"A","proxied":true,"name":"'${record_name}'","content":"'${ip4}'","ttl":1}'"'"
json_data_v6="'"'{"id":"'${zone_identifier}'","type":"AAAA","proxied":true,"name":"'${record_name}'","content":"'${ip6}'","ttl":1}'"'"
update_cmd=( curl -s -X PUT '"https://api.cloudflare.com/client/v4/zones/'${zone_identifier}'/dns_records/'__record_identifier__'"' "${header_auth_paramheader[@]}" -H '"Content-Type: application/json"' )

# Execution result
if [ ! "${ip4}" == "${old_ip4}" ]; then
  update4=`eval ${update_cmd[@]//__record_identifier__/${record_identifier4}} --data $json_data_v4`
  case "$update4" in
  *'"success":true'*)
    echo -e "Update for A record '${record_name} (${record_identifier4})' succeeded.\n  - Old value: ${old_ip4}\n  + New value: ${ip4}";;
  *)
    >&2 echo -e "Update for A record '${record_name} (${record_identifier4})' failed.\nDUMPING RESULTS:\n${update4}"
    exit 1;;
  esac
fi

if [ ! "${ip6}" == "${old_ip6}" ]; then
  update6=`eval ${update_cmd[@]//__record_identifier__/${record_identifier6}} --data $json_data_v6`
  case "$update6" in
  *'"success":true'*)
    echo -e "Update for AAAA record '${record_name} (${record_identifier6})' succeeded.\n  - Old value: ${old_ip6}\n  + New value: ${ip6}";;
  *)
    >&2 echo -e "Update for AAAA record '${record_name} (${record_identifier6})' failed.\nDUMPING RESULTS:\n${update6}"
    exit 1;;
  esac
fi

